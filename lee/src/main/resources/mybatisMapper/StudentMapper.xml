<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yuan.lee.dao.StudentMapper" >
  <resultMap id="BaseResultMap" type="com.yuan.lee.entity.Student" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="classname" property="classname" jdbcType="VARCHAR" />
    <result column="cellphone" property="cellphone" jdbcType="VARCHAR" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="birthday" property="birthday" jdbcType="DATE" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, name, classname, cellphone, email, birthday
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from t_student
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_student
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.yuan.lee.entity.Student" >
    insert into t_student (id, name, classname, 
      cellphone, email, birthday
      )
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{classname,jdbcType=VARCHAR}, 
      #{cellphone,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{birthday,jdbcType=DATE}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.yuan.lee.entity.Student" >
    insert into t_student
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="classname != null" >
        classname,
      </if>
      <if test="cellphone != null" >
        cellphone,
      </if>
      <if test="email != null" >
        email,
      </if>
      <if test="birthday != null" >
        birthday,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="classname != null" >
        #{classname,jdbcType=VARCHAR},
      </if>
      <if test="cellphone != null" >
        #{cellphone,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null" >
        #{birthday,jdbcType=DATE},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.yuan.lee.entity.Student" >
    update t_student
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="classname != null" >
        classname = #{classname,jdbcType=VARCHAR},
      </if>
      <if test="cellphone != null" >
        cellphone = #{cellphone,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null" >
        birthday = #{birthday,jdbcType=DATE},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yuan.lee.entity.Student" >
    update t_student
    set name = #{name,jdbcType=VARCHAR},
      classname = #{classname,jdbcType=VARCHAR},
      cellphone = #{cellphone,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      birthday = #{birthday,jdbcType=DATE}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectAll" resultMap="BaseResultMap" parameterType="map" >
    select
    <include refid="Base_Column_List" />
    from t_student
    <if test="sortName != null" >
      order by ${sortName}
      <if test="sortOrder != null" >
        ${sortOrder}
      </if>
    </if>
  </select>
  <select id="findByParams" resultMap="BaseResultMap" parameterType="map" >
    select
    <include refid="Base_Column_List" />
    from t_student
    where 1=1
       <if test="id !=null">
       and id= #{id,jdbcType=INTEGER} 
       </if>
       <if test="name !=null">
       and name = #{name,jdbcType=VARCHAR}	
       </if>
       <if test="classname !=null">
     	 and classname = #{classname,jdbcType=VARCHAR}  
       </if>
       <if test="email !=null">
      and  email = #{email,jdbcType=VARCHAR}  
       </if>
       <if test="cellphone !=null">
       and cellphone = #{cellphone,jdbcType=VARCHAR}
       </if>
    <if test="sortName != null" >
      order by ${sortName}
      <if test="sortOrder != null" >
        ${sortOrder}
      </if>
    </if>
    <if test="pageSize != null and startNum != null" >
      limit #{pageSize} offset #{startNum}
    </if>
  </select>
  <select id="findByParamsCount" resultType="int" parameterType="map" >
    select count(*)
      from t_student
       where 1=1
       <if test="id !=null">
       and id= #{id,jdbcType=INTEGER} 
       </if>
       <if test="name !=null">
       and name = #{name,jdbcType=VARCHAR}	
       </if>
       <if test="classname !=null">
      and classname = #{classname,jdbcType=VARCHAR}  
       </if>
       <if test="email !=null">
      and  email = #{email,jdbcType=VARCHAR}  
       </if>
        <if test="cellphone !=null">
       and cellphone = #{cellphone,jdbcType=VARCHAR}
       </if>
          
  </select>
</mapper>