<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yuan.lee.dao.system.AccountPermMapper" >
  <resultMap id="BaseResultMap" type="com.yuan.lee.entity.AccountPerm" >
    <id column="accountpermid" property="accountpermid" jdbcType="VARCHAR" />
    <result column="accountid" property="accountid" jdbcType="VARCHAR" />
    <result column="permissionsid" property="permissionsid" jdbcType="VARCHAR" />
    <result column="type" property="type" jdbcType="VARCHAR" />
    <result column="state" property="state" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    accountpermid, accountid, permissionsid, type, state
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from t_accountperm
    where accountpermid = #{accountpermid,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from t_accountperm
    where accountpermid = #{accountpermid,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.yuan.lee.entity.AccountPerm" >
    insert into t_accountperm (accountpermid, accountid, permissionsid, 
      type, state)
    values (#{accountpermid,jdbcType=VARCHAR}, #{accountid,jdbcType=VARCHAR}, #{permissionsid,jdbcType=VARCHAR}, 
      #{type,jdbcType=VARCHAR}, #{state,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.yuan.lee.entity.AccountPerm" >
    insert into t_accountperm
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="accountpermid != null" >
        accountpermid,
      </if>
      <if test="accountid != null" >
        accountid,
      </if>
      <if test="permissionsid != null" >
        permissionsid,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="state != null" >
        state,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="accountpermid != null" >
        #{accountpermid,jdbcType=VARCHAR},
      </if>
      <if test="accountid != null" >
        #{accountid,jdbcType=VARCHAR},
      </if>
      <if test="permissionsid != null" >
        #{permissionsid,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        #{state,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.yuan.lee.entity.AccountPerm" >
    update t_accountperm
    <set >
      <if test="accountid != null" >
        accountid = #{accountid,jdbcType=VARCHAR},
      </if>
      <if test="permissionsid != null" >
        permissionsid = #{permissionsid,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=VARCHAR},
      </if>
    </set>
    where accountpermid = #{accountpermid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yuan.lee.entity.AccountPerm" >
    update t_accountperm
    set accountid = #{accountid,jdbcType=VARCHAR},
      permissionsid = #{permissionsid,jdbcType=VARCHAR},
      type = #{type,jdbcType=VARCHAR},
      state = #{state,jdbcType=VARCHAR}
    where accountpermid = #{accountpermid,jdbcType=VARCHAR}
  </update>
  <select id="selectAll" resultMap="BaseResultMap" parameterType="map" >
    select
    <include refid="Base_Column_List" />
    from t_accountperm
    <if test="sortName != null" >
      order by ${sortName}
      <if test="sortOrder != null" >
        ${sortOrder}
      </if>
    </if>
  </select>
  <select id="findByParams" resultMap="BaseResultMap" parameterType="map" >
    select
    <include refid="Base_Column_List" />
    from t_accountperm
    <if test="sortName != null" >
      order by ${sortName}
      <if test="sortOrder != null" >
        ${sortOrder}
      </if>
    </if>
    <if test="pageSize != null and startNum != null" >
      limit #{pageSize} offset #{startNum}
    </if>
  </select>
  <select id="findByParamsCount" resultType="int" parameterType="map" >
    select count(*) from t_accountperm
  </select>
</mapper>